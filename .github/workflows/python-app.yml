name: API Tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: clickbits
          POSTGRES_PASSWORD: changeme
          POSTGRES_DB: clickbits
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Set environment variables
      run: |
        while IFS= read -r line; do
          echo "$line" >> $GITHUB_ENV
        done < ./conf/.env.dev
    - name: Migrate database to latest version
      run: |
        alembic upgrade head
    - name: Migrate database downgrade to base version
      run: |
        alembic downgrade base
    - name: Migrate database finally to latest version
      run: |
        alembic upgrade head
    - name: Run tests
      run: |
        pytest -v --junitxml=junit/test-results-${{ matrix.python-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
